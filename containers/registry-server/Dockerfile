# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This Dockerfile builds an image that runs the registry-server with no proxy.

# Use the official Golang image to create a build artifact.
# This is based on Debian and sets the GOPATH to /go.
# https://hub.docker.com/_/golang
FROM golang:1.20-bullseye as builder
RUN apt-get update
RUN apt-get -y install unzip

# Create and change to the app directory.
WORKDIR /app

# Retrieve application dependencies.
# This allows the container build to reuse cached dependencies.
COPY go.* ./
RUN go mod download

# Copy local code to the container image.
COPY . ./

RUN ./tools/FETCH-PROTOC.sh && make protos

# Build registry-server.
RUN CGO_ENABLED=1 GOOS=linux go build -v -o registry-server ./cmd/registry-server

FROM gcr.io/distroless/base:latest

# Copy the binary to the production image from the builder stage.
COPY --from=builder /app/registry-server /registry-server
COPY --from=builder /app/deployments/envoy/proto.pb /proto.pb

# Copy the standard registry configuration from the builder image.
COPY config/registry-server.yaml /registry-server.yaml

# Run the web service on container startup.
CMD ["/registry-server", "--configuration", "registry-server.yaml"]
