// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: google/cloud/apigeeregistry/v1/scoring/definition.proto

// (-- api-linter: core::0215::versioned-packages=disabled
//     aip.dev/not-precedent: Support protos for the apigeeregistry.v1 API. --)

package rpc

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Stores the definition which will be used to derive scores for the resources
// stored in registry.
type ScoreDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Artifact identifier. May be used in YAML representations to indicate the id
	// to be used to attach the artifact.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Artifact kind. May be used in YAML representations to identify the type of
	// this artifact.
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// A human-friendly name for the ScoreDefinition.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// A more detailed description of the ScoreDefinition.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// A Uri which points to an explanation of the scoring logic/tool used here.
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// A human-friendly name to display the uri.
	UriDisplayName string `protobuf:"bytes,6,opt,name=uri_display_name,json=uriDisplayName,proto3" json:"uri_display_name,omitempty"`
	// A pattern for the target resource on which this definition can be applied.
	TargetResource *ResourcePattern `protobuf:"bytes,7,opt,name=target_resource,json=targetResource,proto3" json:"target_resource,omitempty"`
	// Represents how the value of this score will be derived.
	// A score can be a single score_value or a rollup of multiple score_values.
	//
	// Types that are assignable to Formula:
	//
	//	*ScoreDefinition_ScoreFormula
	//	*ScoreDefinition_RollupFormula
	Formula isScoreDefinition_Formula `protobuf_oneof:"formula"`
	// Represents the type and characteristics of the score.
	//
	// Types that are assignable to Type:
	//
	//	*ScoreDefinition_Percent
	//	*ScoreDefinition_Integer
	//	*ScoreDefinition_Boolean
	Type isScoreDefinition_Type `protobuf_oneof:"type"`
}

func (x *ScoreDefinition) Reset() {
	*x = ScoreDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreDefinition) ProtoMessage() {}

func (x *ScoreDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreDefinition.ProtoReflect.Descriptor instead.
func (*ScoreDefinition) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{0}
}

func (x *ScoreDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScoreDefinition) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ScoreDefinition) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ScoreDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScoreDefinition) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ScoreDefinition) GetUriDisplayName() string {
	if x != nil {
		return x.UriDisplayName
	}
	return ""
}

func (x *ScoreDefinition) GetTargetResource() *ResourcePattern {
	if x != nil {
		return x.TargetResource
	}
	return nil
}

func (m *ScoreDefinition) GetFormula() isScoreDefinition_Formula {
	if m != nil {
		return m.Formula
	}
	return nil
}

func (x *ScoreDefinition) GetScoreFormula() *ScoreFormula {
	if x, ok := x.GetFormula().(*ScoreDefinition_ScoreFormula); ok {
		return x.ScoreFormula
	}
	return nil
}

func (x *ScoreDefinition) GetRollupFormula() *RollUpFormula {
	if x, ok := x.GetFormula().(*ScoreDefinition_RollupFormula); ok {
		return x.RollupFormula
	}
	return nil
}

func (m *ScoreDefinition) GetType() isScoreDefinition_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ScoreDefinition) GetPercent() *PercentType {
	if x, ok := x.GetType().(*ScoreDefinition_Percent); ok {
		return x.Percent
	}
	return nil
}

func (x *ScoreDefinition) GetInteger() *IntegerType {
	if x, ok := x.GetType().(*ScoreDefinition_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *ScoreDefinition) GetBoolean() *BooleanType {
	if x, ok := x.GetType().(*ScoreDefinition_Boolean); ok {
		return x.Boolean
	}
	return nil
}

type isScoreDefinition_Formula interface {
	isScoreDefinition_Formula()
}

type ScoreDefinition_ScoreFormula struct {
	// Represents the formula for a value which is derived from
	// a single artifact.
	ScoreFormula *ScoreFormula `protobuf:"bytes,8,opt,name=score_formula,json=scoreFormula,proto3,oneof"`
}

type ScoreDefinition_RollupFormula struct {
	// Represents the formula for a value which is rolled up
	// from multiple scores.
	RollupFormula *RollUpFormula `protobuf:"bytes,9,opt,name=rollup_formula,json=rollupFormula,proto3,oneof"`
}

func (*ScoreDefinition_ScoreFormula) isScoreDefinition_Formula() {}

func (*ScoreDefinition_RollupFormula) isScoreDefinition_Formula() {}

type isScoreDefinition_Type interface {
	isScoreDefinition_Type()
}

type ScoreDefinition_Percent struct {
	// Set this if the score value is a percentage.
	Percent *PercentType `protobuf:"bytes,10,opt,name=percent,proto3,oneof"`
}

type ScoreDefinition_Integer struct {
	// Set this if the score value is an integer.
	Integer *IntegerType `protobuf:"bytes,11,opt,name=integer,proto3,oneof"`
}

type ScoreDefinition_Boolean struct {
	// Set this if the score value is a boolean.
	Boolean *BooleanType `protobuf:"bytes,12,opt,name=boolean,proto3,oneof"`
}

func (*ScoreDefinition_Percent) isScoreDefinition_Type() {}

func (*ScoreDefinition_Integer) isScoreDefinition_Type() {}

func (*ScoreDefinition_Boolean) isScoreDefinition_Type() {}

// Represents a pattern to identify resources in the registry.
type ResourcePattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A pattern that specifies a resource.
	// This can specify one particular resource or a group of resources.
	// Format:
	//
	//	apis/{api}/versions/{version}/specs/{spec}/artifacts/{artifact}
	//	apis/-/versions/-/specs/-/artifacts/-
	Pattern string `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
	// A filter expression that limits the resources that match the pattern.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ResourcePattern) Reset() {
	*x = ResourcePattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePattern) ProtoMessage() {}

func (x *ResourcePattern) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePattern.ProtoReflect.Descriptor instead.
func (*ResourcePattern) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{1}
}

func (x *ResourcePattern) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *ResourcePattern) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// Represents how a score will be derived from the result artifacts.
type ScoreFormula struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Pattern of the artifact from which the score value will be extracted.
	// Should start with a $resource reference to make sure artifacts are pulled
	// out from the correct resource.
	Artifact *ResourcePattern `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	// A CEL expression which extracts the score value from the artifact.
	ScoreExpression string `protobuf:"bytes,2,opt,name=score_expression,json=scoreExpression,proto3" json:"score_expression,omitempty"`
	// Set an ID to reference this value in the rollup formula.
	ReferenceId string `protobuf:"bytes,3,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
}

func (x *ScoreFormula) Reset() {
	*x = ScoreFormula{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreFormula) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreFormula) ProtoMessage() {}

func (x *ScoreFormula) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreFormula.ProtoReflect.Descriptor instead.
func (*ScoreFormula) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{2}
}

func (x *ScoreFormula) GetArtifact() *ResourcePattern {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *ScoreFormula) GetScoreExpression() string {
	if x != nil {
		return x.ScoreExpression
	}
	return ""
}

func (x *ScoreFormula) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

// Represents how multiple scores will be derived from the result artifacts
// and rolled up into a single value.
type RollUpFormula struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Extracts scores from multiple artifacts to be rolled up into a single
	// value. While using this, it is necessary that ScoreFormulas have defined
	// values for their reference_ids.
	ScoreFormulas []*ScoreFormula `protobuf:"bytes,1,rep,name=score_formulas,json=scoreFormulas,proto3" json:"score_formulas,omitempty"`
	// A CEL expression which rolls up all the scores into a single value.
	// Uses reference_ids of score_expr in the expression.
	RollupExpression string `protobuf:"bytes,2,opt,name=rollup_expression,json=rollupExpression,proto3" json:"rollup_expression,omitempty"`
}

func (x *RollUpFormula) Reset() {
	*x = RollUpFormula{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollUpFormula) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollUpFormula) ProtoMessage() {}

func (x *RollUpFormula) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollUpFormula.ProtoReflect.Descriptor instead.
func (*RollUpFormula) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{3}
}

func (x *RollUpFormula) GetScoreFormulas() []*ScoreFormula {
	if x != nil {
		return x.ScoreFormulas
	}
	return nil
}

func (x *RollUpFormula) GetRollupExpression() string {
	if x != nil {
		return x.RollupExpression
	}
	return ""
}

// Represents a percentage score type.
type PercentType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents the thresholds for severity of this type of score.
	// Examples of thresholds:
	// For scores where low value is of concern.
	//
	//	thresholds = []Threshold{
	//	  {
	//	    severity: Severity.ALERT,
	//	    range: NumberRange{ min: 0, max: 30},
	//	  },
	//	  {
	//	    severity: Severity.WARNING,
	//	    range: NumberRange{ min: 31, max: 70},
	//	  },
	//	  { severity: Severity.OK,
	//	    range: NumberRange{ min: 71, max: 100},
	//	  },
	//	}
	//
	// For scores where high value is of concern.
	//
	//	thresholds = []Threshold{
	//	  {
	//	    severity: Severity.ALERT,
	//	    range: NumberRange{ min: 61, max: 100},
	//	  },
	//	  {
	//	    severity: Severity.WARNING,
	//	    range: NumberRange{ min: 31, max: 60},
	//	  },
	//	  { severity: Severity.OK,
	//	    range: NumberRange{ min: 0, max: 30},
	//	  },
	//	}
	Thresholds []*NumberThreshold `protobuf:"bytes,1,rep,name=thresholds,proto3" json:"thresholds,omitempty"`
}

func (x *PercentType) Reset() {
	*x = PercentType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PercentType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PercentType) ProtoMessage() {}

func (x *PercentType) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PercentType.ProtoReflect.Descriptor instead.
func (*PercentType) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{4}
}

func (x *PercentType) GetThresholds() []*NumberThreshold {
	if x != nil {
		return x.Thresholds
	}
	return nil
}

// Represents an integer score type.
type IntegerType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents the minimum value this type of score can take.
	// Defaults to 0 if not specified.
	MinValue int32 `protobuf:"varint,1,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	// Represents the maximum value this type of score can take.
	MaxValue int32 `protobuf:"varint,2,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	// Represents the thresholds for severity of this type of score.
	// Examples will be similar to PercentType, except that the limits of the
	// range will be min_value and max_value.
	Thresholds []*NumberThreshold `protobuf:"bytes,3,rep,name=thresholds,proto3" json:"thresholds,omitempty"`
}

func (x *IntegerType) Reset() {
	*x = IntegerType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegerType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegerType) ProtoMessage() {}

func (x *IntegerType) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegerType.ProtoReflect.Descriptor instead.
func (*IntegerType) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{5}
}

func (x *IntegerType) GetMinValue() int32 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *IntegerType) GetMaxValue() int32 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *IntegerType) GetThresholds() []*NumberThreshold {
	if x != nil {
		return x.Thresholds
	}
	return nil
}

// Represents a boolean score type.
type BooleanType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A string to display the true value of this type of score in the UI.
	// Defaults to "true" if not specified.
	DisplayTrue string `protobuf:"bytes,1,opt,name=display_true,json=displayTrue,proto3" json:"display_true,omitempty"`
	// A string to display the "false" value of this type of score in the UI.
	// Defaults to "false" if not specified.
	DisplayFalse string `protobuf:"bytes,2,opt,name=display_false,json=displayFalse,proto3" json:"display_false,omitempty"`
	// Represents the thresholds for severity of this type of score.
	// Examples:
	//
	//	thresholds = []Threshold{
	//	  {
	//	    severity: Severity.ALERT,
	//	    value: false,
	//	  },
	//	  { severity: Severity.OK,
	//	    value: true,
	//	  },
	//	}
	//
	// For scores where false value is not an alert but a warning.
	//
	//	thresholds = []Threshold{
	//	  {
	//	    severity: Severity.WARNING,
	//	    value: false,
	//	  },
	//	  { severity: Severity.OK,
	//	    value: true,
	//	  },
	//	}
	Thresholds []*BooleanThreshold `protobuf:"bytes,3,rep,name=thresholds,proto3" json:"thresholds,omitempty"`
}

func (x *BooleanType) Reset() {
	*x = BooleanType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanType) ProtoMessage() {}

func (x *BooleanType) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanType.ProtoReflect.Descriptor instead.
func (*BooleanType) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{6}
}

func (x *BooleanType) GetDisplayTrue() string {
	if x != nil {
		return x.DisplayTrue
	}
	return ""
}

func (x *BooleanType) GetDisplayFalse() string {
	if x != nil {
		return x.DisplayFalse
	}
	return ""
}

func (x *BooleanType) GetThresholds() []*BooleanThreshold {
	if x != nil {
		return x.Thresholds
	}
	return nil
}

// Represents the threshold to associate a numeric score value with
// a particular severity level.
type NumberThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents the severity level of the value of the score.
	Severity Severity `protobuf:"varint,1,opt,name=severity,proto3,enum=google.cloud.apigeeregistry.v1.scoring.Severity" json:"severity,omitempty"`
	// The boundaries specified in this field will be included in the mentioned
	// severity level. For examples see: PercentType, IntegerType.
	Range *NumberThreshold_NumberRange `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *NumberThreshold) Reset() {
	*x = NumberThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberThreshold) ProtoMessage() {}

func (x *NumberThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberThreshold.ProtoReflect.Descriptor instead.
func (*NumberThreshold) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{7}
}

func (x *NumberThreshold) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

func (x *NumberThreshold) GetRange() *NumberThreshold_NumberRange {
	if x != nil {
		return x.Range
	}
	return nil
}

// Represents the threshold to associate a boolean score value with
// a particular severity level.
type BooleanThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents the severity level of the value of the score.
	Severity Severity `protobuf:"varint,1,opt,name=severity,proto3,enum=google.cloud.apigeeregistry.v1.scoring.Severity" json:"severity,omitempty"`
	// The value field will be used to determine the severity
	// level of the generated score.
	Value bool `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BooleanThreshold) Reset() {
	*x = BooleanThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanThreshold) ProtoMessage() {}

func (x *BooleanThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanThreshold.ProtoReflect.Descriptor instead.
func (*BooleanThreshold) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{8}
}

func (x *BooleanThreshold) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

func (x *BooleanThreshold) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

// Stores the definition which will be used to generate scorecards for the
// resources stored in registry.
type ScoreCardDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Artifact identifier. May be used in YAML representations to indicate the id
	// to be used to attach the artifact.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Artifact kind. May be used in YAML representations to identify the type of
	// this artifact.
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// A human-friendly name for the ScoreCardDefinition.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// A more detailed description of the ScoreCardDefinition.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// A pattern of target resource on which this definition can be applied.
	TargetResource *ResourcePattern `protobuf:"bytes,5,opt,name=target_resource,json=targetResource,proto3" json:"target_resource,omitempty"`
	// Artifact patterns of scores which should be displayed in the ScoreCard.
	// Should start with a $resource reference to make sure artifacts are
	// pulled out from the correct resource.
	ScorePatterns []string `protobuf:"bytes,6,rep,name=score_patterns,json=scorePatterns,proto3" json:"score_patterns,omitempty"`
}

func (x *ScoreCardDefinition) Reset() {
	*x = ScoreCardDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreCardDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreCardDefinition) ProtoMessage() {}

func (x *ScoreCardDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreCardDefinition.ProtoReflect.Descriptor instead.
func (*ScoreCardDefinition) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{9}
}

func (x *ScoreCardDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScoreCardDefinition) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ScoreCardDefinition) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ScoreCardDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScoreCardDefinition) GetTargetResource() *ResourcePattern {
	if x != nil {
		return x.TargetResource
	}
	return nil
}

func (x *ScoreCardDefinition) GetScorePatterns() []string {
	if x != nil {
		return x.ScorePatterns
	}
	return nil
}

type NumberThreshold_NumberRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min int32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max int32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *NumberThreshold_NumberRange) Reset() {
	*x = NumberThreshold_NumberRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberThreshold_NumberRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberThreshold_NumberRange) ProtoMessage() {}

func (x *NumberThreshold_NumberRange) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberThreshold_NumberRange.ProtoReflect.Descriptor instead.
func (*NumberThreshold_NumberRange) Descriptor() ([]byte, []int) {
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP(), []int{7, 0}
}

func (x *NumberThreshold_NumberRange) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *NumberThreshold_NumberRange) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

var File_google_cloud_apigeeregistry_v1_scoring_definition_proto protoreflect.FileDescriptor

var file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDesc = []byte{
	0x0a, 0x37, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x35, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x05, 0x0a, 0x0f, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x28, 0x0a,
	0x10, 0x75, 0x72, 0x69, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x72, 0x69, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x65, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x5b,
	0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x12, 0x5e, 0x0a, 0x0e, 0x72,
	0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x6c,
	0x6c, 0x55, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x6f,
	0x6c, 0x6c, 0x75, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x12, 0x4f, 0x0a, 0x07, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x07,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x01, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x4f, 0x0a,
	0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x42, 0x09,
	0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x48, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xbb, 0x01, 0x0a, 0x0c,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x12, 0x58, 0x0a, 0x08,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x0d, 0x52, 0x6f,
	0x6c, 0x6c, 0x55, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x12, 0x60, 0x0a, 0x0e, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0d,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x12, 0x30, 0x0a,
	0x11, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x72,
	0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x66, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x57,
	0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x0a, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x22,
	0xaf, 0x01, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x72, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x72,
	0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65,
	0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x73, 0x22, 0x81, 0x02, 0x0a, 0x0f, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x51, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x5e, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x3b, 0x0a, 0x0b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x15,
	0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x51, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67,
	0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x13, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x65,
	0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x73, 0x42, 0x6a, 0x0a, 0x2a, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x42,
	0x16, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x67, 0x65, 0x65, 0x2f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x72, 0x70, 0x63, 0x3b, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescOnce sync.Once
	file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescData = file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDesc
)

func file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescGZIP() []byte {
	file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescOnce.Do(func() {
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescData)
	})
	return file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDescData
}

var file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_google_cloud_apigeeregistry_v1_scoring_definition_proto_goTypes = []interface{}{
	(*ScoreDefinition)(nil),             // 0: google.cloud.apigeeregistry.v1.scoring.ScoreDefinition
	(*ResourcePattern)(nil),             // 1: google.cloud.apigeeregistry.v1.scoring.ResourcePattern
	(*ScoreFormula)(nil),                // 2: google.cloud.apigeeregistry.v1.scoring.ScoreFormula
	(*RollUpFormula)(nil),               // 3: google.cloud.apigeeregistry.v1.scoring.RollUpFormula
	(*PercentType)(nil),                 // 4: google.cloud.apigeeregistry.v1.scoring.PercentType
	(*IntegerType)(nil),                 // 5: google.cloud.apigeeregistry.v1.scoring.IntegerType
	(*BooleanType)(nil),                 // 6: google.cloud.apigeeregistry.v1.scoring.BooleanType
	(*NumberThreshold)(nil),             // 7: google.cloud.apigeeregistry.v1.scoring.NumberThreshold
	(*BooleanThreshold)(nil),            // 8: google.cloud.apigeeregistry.v1.scoring.BooleanThreshold
	(*ScoreCardDefinition)(nil),         // 9: google.cloud.apigeeregistry.v1.scoring.ScoreCardDefinition
	(*NumberThreshold_NumberRange)(nil), // 10: google.cloud.apigeeregistry.v1.scoring.NumberThreshold.NumberRange
	(Severity)(0),                       // 11: google.cloud.apigeeregistry.v1.scoring.Severity
}
var file_google_cloud_apigeeregistry_v1_scoring_definition_proto_depIdxs = []int32{
	1,  // 0: google.cloud.apigeeregistry.v1.scoring.ScoreDefinition.target_resource:type_name -> google.cloud.apigeeregistry.v1.scoring.ResourcePattern
	2,  // 1: google.cloud.apigeeregistry.v1.scoring.ScoreDefinition.score_formula:type_name -> google.cloud.apigeeregistry.v1.scoring.ScoreFormula
	3,  // 2: google.cloud.apigeeregistry.v1.scoring.ScoreDefinition.rollup_formula:type_name -> google.cloud.apigeeregistry.v1.scoring.RollUpFormula
	4,  // 3: google.cloud.apigeeregistry.v1.scoring.ScoreDefinition.percent:type_name -> google.cloud.apigeeregistry.v1.scoring.PercentType
	5,  // 4: google.cloud.apigeeregistry.v1.scoring.ScoreDefinition.integer:type_name -> google.cloud.apigeeregistry.v1.scoring.IntegerType
	6,  // 5: google.cloud.apigeeregistry.v1.scoring.ScoreDefinition.boolean:type_name -> google.cloud.apigeeregistry.v1.scoring.BooleanType
	1,  // 6: google.cloud.apigeeregistry.v1.scoring.ScoreFormula.artifact:type_name -> google.cloud.apigeeregistry.v1.scoring.ResourcePattern
	2,  // 7: google.cloud.apigeeregistry.v1.scoring.RollUpFormula.score_formulas:type_name -> google.cloud.apigeeregistry.v1.scoring.ScoreFormula
	7,  // 8: google.cloud.apigeeregistry.v1.scoring.PercentType.thresholds:type_name -> google.cloud.apigeeregistry.v1.scoring.NumberThreshold
	7,  // 9: google.cloud.apigeeregistry.v1.scoring.IntegerType.thresholds:type_name -> google.cloud.apigeeregistry.v1.scoring.NumberThreshold
	8,  // 10: google.cloud.apigeeregistry.v1.scoring.BooleanType.thresholds:type_name -> google.cloud.apigeeregistry.v1.scoring.BooleanThreshold
	11, // 11: google.cloud.apigeeregistry.v1.scoring.NumberThreshold.severity:type_name -> google.cloud.apigeeregistry.v1.scoring.Severity
	10, // 12: google.cloud.apigeeregistry.v1.scoring.NumberThreshold.range:type_name -> google.cloud.apigeeregistry.v1.scoring.NumberThreshold.NumberRange
	11, // 13: google.cloud.apigeeregistry.v1.scoring.BooleanThreshold.severity:type_name -> google.cloud.apigeeregistry.v1.scoring.Severity
	1,  // 14: google.cloud.apigeeregistry.v1.scoring.ScoreCardDefinition.target_resource:type_name -> google.cloud.apigeeregistry.v1.scoring.ResourcePattern
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_google_cloud_apigeeregistry_v1_scoring_definition_proto_init() }
func file_google_cloud_apigeeregistry_v1_scoring_definition_proto_init() {
	if File_google_cloud_apigeeregistry_v1_scoring_definition_proto != nil {
		return
	}
	file_google_cloud_apigeeregistry_v1_scoring_severity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreFormula); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollUpFormula); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PercentType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegerType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreCardDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberThreshold_NumberRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ScoreDefinition_ScoreFormula)(nil),
		(*ScoreDefinition_RollupFormula)(nil),
		(*ScoreDefinition_Percent)(nil),
		(*ScoreDefinition_Integer)(nil),
		(*ScoreDefinition_Boolean)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_apigeeregistry_v1_scoring_definition_proto_goTypes,
		DependencyIndexes: file_google_cloud_apigeeregistry_v1_scoring_definition_proto_depIdxs,
		MessageInfos:      file_google_cloud_apigeeregistry_v1_scoring_definition_proto_msgTypes,
	}.Build()
	File_google_cloud_apigeeregistry_v1_scoring_definition_proto = out.File
	file_google_cloud_apigeeregistry_v1_scoring_definition_proto_rawDesc = nil
	file_google_cloud_apigeeregistry_v1_scoring_definition_proto_goTypes = nil
	file_google_cloud_apigeeregistry_v1_scoring_definition_proto_depIdxs = nil
}
