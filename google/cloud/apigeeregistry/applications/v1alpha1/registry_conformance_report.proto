syntax = "proto3";

package google.cloud.apigeeregistry.applications.v1alpha1;

import "google/api/field_behavior.proto";
import "google/cloud/apigeeregistry/applications/v1alpha1/registry_styleguide.proto";
import "google/cloud/apigeeregistry/applications/v1alpha1/registry_lint.proto";

option java_package = "com.google.cloud.apigeeregistry.applications.v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "RegistryConformanceReportProto";
option go_package = "github.com/apigee/registry/rpc;rpc";

// ConformanceReport describes how well an API Spec or a series of
// API Specs conform to a specific API Style guide.
message ConformanceReport {
    // Resource name of the conformance report.
    string name = 1 [
        (google.api.field_behavior) = REQUIRED
    ];

    // Name of the style guide that this report pertains to.
    string styleguide_name = 2 [
        (google.api.field_behavior) = REQUIRED
    ];

    // A list of guideline report groups.
    repeated GuidelineReportGroup guideline_report_groups = 3;
}

// GuidelineReport describes how well an API Spec or a series of
// API Specs conform to a guideline within an API Style Guide.
message GuidelineReport {
    // Name of the guideline that this report pertains to.
    string guideline_name = 1 [
        (google.api.field_behavior) = REQUIRED
    ];

    // A list of rule report groups.
    repeated RuleReportGroup rule_report_groups = 2;
}

// RuleReport provides information and feedback on a rule that 
// a spec breaches within a guideline on an API Style Guide.
message RuleReport {
    // Name of the rule that the spec breaches.
    string rule_name = 1 [
        (google.api.field_behavior) = REQUIRED
    ];

    // Resource name of the spec that the rule was breached on.
    string spec_name = 2 [
        (google.api.field_behavior) = REQUIRED
    ];

    // A suggestion for resolving the problem.
    string suggestion = 3;

    // The location of the problem in the spec file.
    LintLocation location = 4;
}

// GuidelineReportGroup is an abstraction that maps status
// (PROPOSED, ACTIVE, DEPRECATED, DISABLED) to a list of 
// guideline reports for guidelines of that status.
message GuidelineReportGroup {
    // Status of the guidelines in this report group.
    Guideline.Status status = 1 [
        (google.api.field_behavior) = REQUIRED
    ];

    // A list of guideline reports.
    repeated GuidelineReport guideline_reports = 2 [
        (google.api.field_behavior) = REQUIRED
    ];
}

// RuleReportGroup is an abstraction that maps severity
// (ERROR WARNING, INFO, HINT) to a list of rule reports for
// rules of that severity.
message RuleReportGroup {
    // Severity of the rules in this report group.
    Rule.Severity severity = 1 [
        (google.api.field_behavior) = REQUIRED
    ];

    // A list of rule reports.
    repeated RuleReport rule_reports = 2 [
        (google.api.field_behavior) = REQUIRED
    ];
}
