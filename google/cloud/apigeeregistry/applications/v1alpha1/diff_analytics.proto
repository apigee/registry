// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package google.cloud.apigeeregistry.applications.v1alpha1;
// [START go_declaration]
option go_package = "github.com/apigee/registry/rpc;rpc";
// [END go_declaration]

/*Diff contains the diff of a spec and its revision. */
message Diff {
  /* additions holds every addition change in the diff.
     The string will hold the entire field path of one addition change in the
     format foo.bar.x .*/
  repeated string additions = 1;
  /* deletions holds every deletion change in the diff.
     The string will hold the entire field path of one deletion change in the
     format foo.bar.x .*/
  repeated string deletions = 2;

  // ValueChange hold the values of the elements that changed in one diff change.
  message ValueChange {
    // from represents the previous value of the element.
    string from = 1;
    // to represents the current value of the element.
    string to = 2;
  }
  /* modifications holds every modification change in the diff.
     The string key will hold the field path of one modification change in the
     format foo.bar.x.
     The value of the key will repersent the element that was modified in the
     field. */
  map <string, ValueChange> modifications = 3;
}

/* ChangeDetails classifies changes from diff into seperate categories. */
message ChangeDetails {
  /* breakingChanges is a Diff proto that only contains the breaking changes
  of a diff.*/
  Diff breaking_changes = 1;
  /* nonBreakingChanges is a Diff proto that only contains the non-breaking
  changes of a diff.*/
  Diff non_breaking_changes = 2;
  /* unknownChanges is a Diff proto that contains all the changes that could not
  be classified in the other categories.*/
  Diff unknown_changes = 3;
}

/* ChangeStats holds information relating to a list of diffs*/
message ChangeStats {
  // breaking_change_count represents the total number of breaking changes.
  int64 breaking_change_count = 1;
  // nonbreaking_change_count represents the total number of non-breaking changes.
  int64 nonbreaking_change_count = 2;
  // diff_count represents the number of diffs used in this stats
  int64 diff_count = 3;
  }

/* ChangeMetrics holds metrics about a list of diffs. Each metric is computed from
two or more stats. */
message ChangeMetrics {
  /* breaking_change_percentage is the percentage of changes that are breaking.
  It is computed by the equation
  (breaking_change_count / (nonbreaking_change_count + breaking_change_count))*/
  double breaking_change_percentage = 1;
  /* breaking_change_rate is the average number of breaking changes that are
  introduced per Diff.
  It is computed by the equation
  ((nonbreaking_change_count + breaking_change_count) / diff_count)*/
  double breaking_change_rate = 2;
  }
