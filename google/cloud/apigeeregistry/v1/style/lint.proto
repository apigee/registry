// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

// (-- api-linter: core::0215::versioned-packages=disabled
//     aip.dev/not-precedent: Support protos for the apigeeregistry.v1 API. --)
package google.cloud.apigeeregistry.v1.style;

import "google/api/field_behavior.proto";

option java_package = "com.google.cloud.apigeeregistry.v1.style";
option java_multiple_files = true;
option java_outer_classname = "LintProto";
option go_package = "github.com/apigee/registry/pkg/application/style;style";

// Lint wraps the result of a linter run for an API.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: This message is not currently used in an API. --)
message Lint {
  // The name of the result.
  string name = 1;

  // The lint results for each file examined.
  repeated LintFile files = 2;
}

// LintFile wraps the result of a linter run for a file.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: This message is not currently used in an API. --)
message LintFile {
  // The path of the file linted.
  string file_path = 1;

  // The problems found when the file was linted.
  repeated LintProblem problems = 2;
}

// LintProblem represents a problem found by a linter.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: This message is not currently used in an API. --)
message LintProblem {
  // A message describing the problem.
  string message = 1;

  // An identifier for a related design rule.
  string rule_id = 2;

  // A link for a related design rule.
  string rule_doc_uri = 3;

  // A suggestion for resolving the problem.
  string suggestion = 4;

  // The location in the file of the problem.
  LintLocation location = 5;
}

// LintLocation represents a range of text in a file.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: This message is not currently used in an API. --)
message LintLocation {
  // The initial position of a problem.
  LintPosition start_position = 1;

  // The end position of a problem.
  LintPosition end_position = 2;
}

// LintPosition represents a point in a file.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: This message is not currently used in an API. --)
message LintPosition {
  // A line number in a file.
  int32 line_number = 1;

  // A column number in a file.
  int32 column_number = 2;
}

// LintStats summarizes linter results.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: This message is not currently used in an API. --)
message LintStats {
  // A sum of the total operations (GET, POST, PUT, DELETE).
  int32 operation_count = 1;

  // The number of schemas contained under this resource.
  int32 schema_count = 2;

  // Problems found in linting.
  repeated LintProblemCount problem_counts = 3;
}

// LintProblemCount represents the number of times a problem was found in
// linting.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: This message is not currently used in an API. --)
message LintProblemCount {
  // The number of occurrences of the problem.
  int32 count = 1;

  // An identifier for the related design rule.
  string rule_id = 2;

  // A link for the related design rule.
  string rule_doc_uri = 3;
}

// LinterRequest represents a request to a linter plugin. The plugin will lint
// the provided spec based on rules that have been enabled.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: This message is not currently used in an API. --)
message LinterRequest {
  // This specifies a directory containing the files of the spec that need to
  // be linted. This path is relative to the directory where the plugin is run.
  string spec_directory = 1;

  // A list of rules that need to be enabled when linting this spec.
  // If no rules are specified, all of the linter's rules should be enabled.
  repeated string rule_ids = 2;
}

// LinterResponse represents a response returned from a linter plugin. It
// contains a list of problems that were identified by the linter.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: This message is not currently used in an API. --)
message LinterResponse {
  // Error message. If non-empty, the plugin failed.
  // The plugin process should exit with status code zero even if it reports
  // an error in this way.
  //
  // This should be used to indicate errors which prevent
  // the plugin from operating as intended. Errors which indicate a problem in
  // the linter itself should be reported by writing a message to stderr and
  // exiting with a non-zero status code.
  repeated string errors = 1;

  // The problems found when the file was linted.
  Lint lint = 2;
}

// Linter contains the name and source code / documentation of specific linter.
// (-- api-linter: core::0123::resource-annotation=disabled
//     aip.dev/not-precedent: This message is not currently used in an API. --)
message Linter {
  // Name of the linter.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  
  // A uri to the linter source code or documentation.
  string uri = 2 [(google.api.field_behavior) = REQUIRED];
}
