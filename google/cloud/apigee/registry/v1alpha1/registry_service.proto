// Copyright 2020 Google LLC. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.apigee.registry.v1alpha1;

import "google/cloud/apigee/registry/v1alpha1/registry_models.proto";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option java_package = "com.google.cloud.apigee.registry.v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "RegistryServiceProto";
option go_package = "github.com/apigee/registry/rpc;rpc";

// The Registry service allows teams to manage descriptions of APIs.
service Registry {
  option (google.api.default_host) = "registry.googleapis.com";

  // GetStatus returns the status of the service.
  rpc GetStatus(protobuf.Empty) returns (Status) {
    option (google.api.http) = {
      get: "/v1alpha1/status"
    };
  }

  // ListProjects returns matching projects.
  // (-- api-linter: standard-methods=disabled --)
  // (-- api-linter: core::0132::method-signature=disabled
  //     aip.dev/not-precedent: the organization is the implicit parent. --)
  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/projects"
    };
  }

  // GetProject returns a specified project.
  rpc GetProject(GetProjectRequest) returns (Project) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=projects/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // CreateProject creates a specified project.
  // (-- api-linter: standard-methods=disabled --)
  // (-- api-linter: core::0133::http-uri-parent=disabled
  //     aip.dev/not-precedent: Project has an implicit parent. --)
  // (-- api-linter: core::0133::method-signature=disabled
  //     aip.dev/not-precedent: Project has an implicit parent. --)
  rpc CreateProject(CreateProjectRequest) returns (Project) {
    option (google.api.http) = {
      post: "/v1alpha1/projects"
      body: "project"
    };
    option (google.api.method_signature) = "project,project_id";
  }

  // UpdateProject can be used to modify a specified project.
  rpc UpdateProject(UpdateProjectRequest) returns (Project) {
    option (google.api.http) = {
      patch: "/v1alpha1/{project.name=projects/*}"
      body: "project"
    };
    option (google.api.method_signature) = "project,update_mask";
  }

  // DeleteProject removes a specified project and all of the resources that it
  // owns.
  rpc DeleteProject(DeleteProjectRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=projects/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // ListApis returns matching APIs.
  rpc ListApis(ListApisRequest) returns (ListApisResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=projects/*}/apis"
    };
    option (google.api.method_signature) = "parent";
  }

  // GetApi returns a specified API.
  rpc GetApi(GetApiRequest) returns (Api) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=projects/*/apis/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // CreateApi creates a specified API.
  rpc CreateApi(CreateApiRequest) returns (Api) {
    option (google.api.http) = {
      post: "/v1alpha1/{parent=projects/*}/apis"
      body: "api"
    };
    option (google.api.method_signature) = "parent,api,api_id";
  }

  // UpdateApi can be used to modify a specified API.
  rpc UpdateApi(UpdateApiRequest) returns (Api) {
    option (google.api.http) = {
      patch: "/v1alpha1/{api.name=projects/*/apis/*}"
      body: "api"
    };
    option (google.api.method_signature) = "api,update_mask";
  }

  // DeleteApi removes a specified API and all of the resources that it
  // owns.
  rpc DeleteApi(DeleteApiRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=projects/*/apis/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // ListVersions returns matching versions.
  rpc ListVersions(ListVersionsRequest) returns (ListVersionsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=projects/*/apis/*}/versions"
    };
    option (google.api.method_signature) = "parent";
  }

  // GetVersion returns a specified version.
  rpc GetVersion(GetVersionRequest) returns (Version) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=projects/*/apis/*/versions/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // CreateVersion creates a specified version.
  rpc CreateVersion(CreateVersionRequest) returns (Version) {
    option (google.api.http) = {
      post: "/v1alpha1/{parent=projects/*/apis/*}/versions"
      body: "version"
    };
    option (google.api.method_signature) = "parent,version,version_id";
  }

  // UpdateVersion can be used to modify a specified version.
  rpc UpdateVersion(UpdateVersionRequest) returns (Version) {
    option (google.api.http) = {
      patch: "/v1alpha1/{version.name=projects/*/apis/*/versions/*}"
      body: "version"
    };
    option (google.api.method_signature) = "version,update_mask";
  }

  // DeleteVersion removes a specified version and all of the resources that it
  // owns.
  rpc DeleteVersion(DeleteVersionRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=projects/*/apis/*/versions/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // ListSpecs returns matching specs.
  rpc ListSpecs(ListSpecsRequest) returns (ListSpecsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=projects/*/apis/*/versions/*}/specs"
    };
    option (google.api.method_signature) = "parent";
  }

  // GetSpec returns a specified spec.
  rpc GetSpec(GetSpecRequest) returns (Spec) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // CreateSpec creates a specified spec.
  rpc CreateSpec(CreateSpecRequest) returns (Spec) {
    option (google.api.http) = {
      post: "/v1alpha1/{parent=projects/*/apis/*/versions/*}/specs"
      body: "spec"
    };
    option (google.api.method_signature) = "parent,spec,spec_id";
  }

  // UpdateSpec can be used to modify a specified spec.
  rpc UpdateSpec(UpdateSpecRequest) returns (Spec) {
    option (google.api.http) = {
      patch: "/v1alpha1/{spec.name=projects/*/apis/*/versions/*/specs/*}"
      body: "spec"
    };
    option (google.api.method_signature) = "spec,update_mask";
  }

  // DeleteSpec removes a specified spec and all of the resources that it
  // owns.
  rpc DeleteSpec(DeleteSpecRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // TagSpecRevision adds a tag to a specified revision of a spec.
  rpc TagSpecRevision(TagSpecRevisionRequest) returns (Spec) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*}:tagRevision"
      body: "*"
    };
  }
  
  // ListSpecRevisions lists all revisions of a spec.
  rpc ListSpecRevisions(ListSpecRevisionsRequest)
      returns (ListSpecRevisionsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*}:listRevisions"
    };
  }

  // ListSpecRevisionTags lists all revision tags defined for a spec.
  rpc ListSpecRevisionTags(ListSpecRevisionTagsRequest)
      returns (ListSpecRevisionTagsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*}:listRevisionTags"
    };
  }
  
  // RollbackSpec sets the current revision to a specified prior revision.
  // Note that this creates a new revision ID.
  rpc RollbackSpec(RollbackSpecRequest) returns (Spec) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*}:rollback"
      body: "*"
    };
  }
  
  // DeleteSpecRevision deletes a revision of a spec.
  // (-- api-linter: core::0136::http-method=disabled
  //     aip.dev/not-precedent: Deleting revisions requires the 'delete' method. --)
  // (-- api-linter: core::0135::http-uri-name=disabled
  //     aip.dev/not-precedent: The linter is missing the 'name' in the URI. --)
  rpc DeleteSpecRevision(DeleteSpecRevisionRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*}:deleteRevision"
    };
    option (google.api.method_signature) = "name";
  }

  // ListProperties returns matching properties.
  rpc ListProperties(ListPropertiesRequest) returns (ListPropertiesResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=projects/*}/properties"
      additional_bindings: {
        get: "/v1alpha1/{parent=projects/*/apis/*}/properties"
      }
      additional_bindings: {
        get: "/v1alpha1/{parent=projects/*/apis/*/versions/*}/properties"
      }
      additional_bindings: {
        get: "/v1alpha1/{parent=projects/*/apis/*/versions/*/specs/*}/properties"
      }
    };
    option (google.api.method_signature) = "parent";
  }

  // GetProperty returns a specified property.
  rpc GetProperty(GetPropertyRequest) returns (Property) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=projects/*/properties/*}"
      additional_bindings: {
        get: "/v1alpha1/{name=projects/*/apis/*/properties/*}"
      }
      additional_bindings: {
        get: "/v1alpha1/{name=projects/*/apis/*/versions/*/properties/*}"
      }
      additional_bindings: {
        get: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*/properties/*}"
      }
    };
    option (google.api.method_signature) = "name";
  }

  // CreateProperty creates a specified property.
  rpc CreateProperty(CreatePropertyRequest) returns (Property) {
    option (google.api.http) = {
      post: "/v1alpha1/{parent=projects/*}/properties"
      body: "property"
      additional_bindings: {
        post: "/v1alpha1/{parent=projects/*/apis/*}/properties"
        body: "property"
      }
      additional_bindings: {
        post: "/v1alpha1/{parent=projects/*/apis/*/versions/*}/properties"
        body: "property"
      }
      additional_bindings: {
        post: "/v1alpha1/{parent=projects/*/apis/*/versions/*/specs/*}/properties"
        body: "property"
      }
    };
    option (google.api.method_signature) = "parent,property,property_id";
  }

  // UpdateProperty can be used to modify a specified property.
  rpc UpdateProperty(UpdatePropertyRequest) returns (Property) {
    option (google.api.http) = {
      patch: "/v1alpha1/{property.name=projects/*/properties/*}"
      body: "property"
      additional_bindings: {
        patch: "/v1alpha1/{property.name=projects/*/apis/*/properties/*}"
        body: "property"
      }
      additional_bindings: {
        patch: "/v1alpha1/{property.name=projects/*/apis/*/versions/*/properties/*}"
        body: "property"
      }
      additional_bindings: {
        patch: "/v1alpha1/{property.name=projects/*/apis/*/versions/*/specs/*/properties/*}"
        body: "property"
      }
    };
    option (google.api.method_signature) = "property";
  }

  // DeleteProperty removes a specified property and all of the resources that it
  // owns.
  rpc DeleteProperty(DeletePropertyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=projects/*/properties/*}"
      additional_bindings: {
        delete: "/v1alpha1/{name=projects/*/apis/*/properties/*}"
      }
      additional_bindings: {
        delete: "/v1alpha1/{name=projects/*/apis/*/versions/*/properties/*}"
      }
      additional_bindings: {
        delete: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*/properties/*}"
      }
    };
    option (google.api.method_signature) = "name";
  }

  // ListLabels returns matching labels.
  rpc ListLabels(ListLabelsRequest) returns (ListLabelsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=projects/*}/labels"
      additional_bindings: {
        get: "/v1alpha1/{parent=projects/*/apis/*}/labels"
      }
      additional_bindings: {
        get: "/v1alpha1/{parent=projects/*/apis/*/versions/*}/labels"
      }
      additional_bindings: {
        get: "/v1alpha1/{parent=projects/*/apis/*/versions/*/specs/*}/labels"
      }
    };
    option (google.api.method_signature) = "parent";
  }

  // GetLabel returns a specified label.
  rpc GetLabel(GetLabelRequest) returns (Label) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=projects/*/labels/*}"
      additional_bindings: {
        get: "/v1alpha1/{name=projects/*/apis/*/labels/*}"
      }
      additional_bindings: {
        get: "/v1alpha1/{name=projects/*/apis/*/versions/*/labels/*}"
      }
      additional_bindings: {
        get: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*/labels/*}"
      }
    };
    option (google.api.method_signature) = "name";
  }

  // CreateLabel creates a specified label.
  rpc CreateLabel(CreateLabelRequest) returns (Label) {
    option (google.api.http) = {
      post: "/v1alpha1/{parent=projects/*}/labels"
      body: "label"
      additional_bindings: {
        post: "/v1alpha1/{parent=projects/*/apis/*}/labels"
        body: "label"
      }
      additional_bindings: {
        post: "/v1alpha1/{parent=projects/*/apis/*/versions/*}/labels"
        body: "label"
      }
      additional_bindings: {
        post: "/v1alpha1/{parent=projects/*/apis/*/versions/*/specs/*}/labels"
        body: "label"
      }
    };
    option (google.api.method_signature) = "parent,label,label_id";
  }

  // DeleteLabel removes a specified label and all of the resources that it
  // owns.
  rpc DeleteLabel(DeleteLabelRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=projects/*/labels/*}"
      additional_bindings: {
        delete: "/v1alpha1/{name=projects/*/apis/*/labels/*}"
      }
      additional_bindings: {
        delete: "/v1alpha1/{name=projects/*/apis/*/versions/*/labels/*}"
      }
      additional_bindings: {
        delete: "/v1alpha1/{name=projects/*/apis/*/versions/*/specs/*/labels/*}"
      }
    };
    option (google.api.method_signature) = "name";
  }

}

// Response message for GetStatus.
message Status {
  // A string describing the status.
  string message = 1;
}

// Request message for ListProjects.
// (-- api-linter: core::0132::request-parent-required=disabled
//     aip.dev/not-precedent: the parent of Project is implicit. --)
message ListProjectsRequest {
  // The maximum number of projects to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListProjects` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListProjects` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;
}

// Response message for ListProjects.
message ListProjectsResponse {
  // The projects from the specified publisher.
  repeated Project projects = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetProject.
message GetProjectRequest {
  // The name of the project to retrieve.
  // Format: projects/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Project"
    }
  ];
}

// Request message for CreateProject.
// (-- api-linter: core::0133::request-parent-required=disabled
//     aip.dev/not-precedent: the parent of Project is implicit. --)
message CreateProjectRequest {
  // The project to create.
  Project project = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the project, which will become the final component of
  // the project's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string project_id = 3;
}

// Request message for UpdateProject.
message UpdateProjectRequest {
  // The project to update.
  //
  // The `name` field is used to identify the project to update.
  // Format: projects/*
  Project project = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for DeleteProject.
message DeleteProjectRequest {
  // The name of the project to delete.
  // Format: projects/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "registry.googleapis.com/Project"}
  ];
}

// Request message for ListApis.
message ListApisRequest {
  // The parent, which owns this collection of APIs.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Api"}
  ];
  // The maximum number of APIs to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListApis` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListApis` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;
}

// Response message for ListApis.
message ListApisResponse {
  // The APIs from the specified publisher.
  repeated Api apis = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetApi.
message GetApiRequest {
  // The name of the API to retrieve.
  // Format: projects/*/apis/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Api"
    }
  ];
}

// Request message for CreateApi.
message CreateApiRequest {
  // The parent, which owns this collection of APIs.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Api"}
  ];
  // The API to create.
  Api api = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the api, which will become the final component of
  // the api's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string api_id = 3;
}

// Request message for UpdateApi.
message UpdateApiRequest {
  // The API to update.
  //
  // The `name` field is used to identify the API to update.
  // Format: projects/*/apis/*
  Api api = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for DeleteApi.
message DeleteApiRequest {
  // The name of the API to delete.
  // Format: projects/*/apis/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "registry.googleapis.com/Api"}
  ];
}

// Request message for ListVersions.
message ListVersionsRequest {
  // The parent, which owns this collection of versions.
  // Format: projects/*/apis/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Version"}
  ];
  // The maximum number of versions to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListVersions` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListVersions` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;
}

// Response message for ListVersions.
message ListVersionsResponse {
  // The versions from the specified publisher.
  repeated Version versions = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetVersion.
message GetVersionRequest {
  // The name of the version to retrieve.
  // Format: projects/*/apis/*/versions/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Version"
    }
  ];
}

// Request message for CreateVersion.
message CreateVersionRequest {
  // The parent, which owns this collection of versions.
  // Format: projects/*/apis/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Version"}
  ];
  // The version to create.
  Version version = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the version, which will become the final component of
  // the version's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string version_id = 3;
}

// Request message for UpdateVersion.
message UpdateVersionRequest {
  // The version to update.
  //
  // The `name` field is used to identify the version to update.
  // Format: projects/*/apis/*/versions/*
  Version version = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for DeleteVersion.
message DeleteVersionRequest {
  // The name of the version to delete.
  // Format: projects/*/apis/*/versions/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "registry.googleapis.com/Version"}
  ];
}

// Request message for ListSpecs.
message ListSpecsRequest {
  // The parent, which owns this collection of specs.
  // Format: projects/*/apis/*/versions/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Spec"}
  ];
  // The maximum number of specs to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListSpecs` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListSpecs` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;

  // The level of detail to return (defaults to BASIC).
  View view = 5;
}

// Response message for ListSpecs.
message ListSpecsResponse {
  // The specs from the specified publisher.
  repeated Spec specs = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetSpec.
message GetSpecRequest {
  // The name of the spec to retrieve.
  // Format: projects/*/apis/*/versions/*/specs/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Spec"
    }
  ];

  // The level of detail to return (defaults to BASIC).
  View view = 2;
}

// Request message for CreateSpec.
message CreateSpecRequest {
  // The parent, which owns this collection of specs.
  // Format: projects/*/apis/*/versions/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Spec"}
  ];
  // The spec to create.
  Spec spec = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the spec, which will become the final component of
  // the spec's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string spec_id = 3;
}

// Request message for UpdateSpec.
message UpdateSpecRequest {
  // The spec to update.
  //
  // The `name` field is used to identify the spec to update.
  // Format: projects/*/apis/*/versions/*/specs/*
  Spec spec = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;

  // If set to true, and the spec is not found, a new spec will be created.
  // In this situation, `update_mask` is ignored.
  bool allow_missing = 3;
}

// Request message for DeleteSpec.
message DeleteSpecRequest {
  // The name of the spec to delete.
  // Format: projects/*/apis/*/versions/*/specs/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "registry.googleapis.com/Spec"}
  ];
}

// Request message for TagSpecRevision.
message TagSpecRevisionRequest {
  // The name of the spec to be tagged, including the revision ID.
  string name = 1;

  // The tag to apply.
  // The tag should be at most 40 characters, and match `[a-z][a-z0-9-]{3,39}`.
  string tag = 2;
}

// Request message for ListSpecRevisions.
// (-- api-linter: core::0132::request-parent-required=disabled
//     aip.dev/not-precedent: Listing revisions does not require a parent. --)
// (-- api-linter: core::0132::request-unknown-fields=disabled
//     aip.dev/not-precedent: Listing revisions requires nonstandard fields. --)
message ListSpecRevisionsRequest {
  // The name of the spec to list revisions for.
  string name = 1;

  // The maximum number of revisions to return per page.
  int32 page_size = 2;

  // The page token, received from a previous ListSpecRevisions call.
  // Provide this to retrieve the subsequent page.
  string page_token = 3;
}

// Response message for ListSpecRevisionsResponse.
// (-- api-linter: core::0132::response-unknown-fields=disabled
//     aip.dev/not-precedent: Listing revisions requires nonstandard fields. --)
message ListSpecRevisionsResponse {
  // The revisions of the spec.
  repeated Spec specs = 1;

  // A token that can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for ListSpecRevisionTags.
// (-- api-linter: core::0132::request-parent-required=disabled
//     aip.dev/not-precedent: Listing revision tags does not require a parent. --)
// (-- api-linter: core::0132::request-unknown-fields=disabled
//     aip.dev/not-precedent: Listing revision tags requires nonstandard fields. --)
message ListSpecRevisionTagsRequest {
  // The name of the spec to list revision tags for.
  string name = 1;

  // The maximum number of revision tags to return per page.
  int32 page_size = 2;

  // The page token, received from a previous ListSpecRevisionTags call.
  // Provide this to retrieve the subsequent page.
  string page_token = 3;
}

// Response message for ListSpecRevisionTagsResponse.
// (-- api-linter: core::0132::response-unknown-fields=disabled
//     aip.dev/not-precedent: Listing revision tags requires nonstandard fields. --)
message ListSpecRevisionTagsResponse {
  // The revisions of the spec.
  repeated SpecRevisionTag tags = 1;

  // A token that can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for RollbackSpec.
message RollbackSpecRequest {
  // The spec being rolled back.
  string name = 1;

  // The revision ID to roll back to.
  // It must be a revision of the same spec.
  //
  //   Example: c7cfa2a8
  string revision_id = 2;
}

// Request message for DeleteSpecRevision.
message DeleteSpecRevisionRequest {
  // The name of the spec revision to be deleted,
  // with a revision ID explicitly included.
  //
  // Example: projects/sample/apis/petstore/versions/1.0.0/specs/openapi.yaml@c7cfa2a8
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "registry.googleapis.com/Spec"}
  ];
}

// Request message for ListProperties.
message ListPropertiesRequest {
  // The parent, which owns this collection of properties.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Property"}
  ];
  // The maximum number of properties to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListProperties` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListProperties` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;

  // The level of detail to return (defaults to BASIC).
  View view = 5;
}

// Response message for ListProperties.
message ListPropertiesResponse {
  // The properties from the specified publisher.
  repeated Property properties = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetProperty.
message GetPropertyRequest {
  // The name of the property to retrieve.
  // Format: projects/*/properties/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Property"
    }
  ];

  // The level of detail to return (defaults to BASIC).
  View view = 2;
}

// Request message for CreateProperty.
message CreatePropertyRequest {
  // The parent, which owns this collection of properties.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Property"}
  ];
  // The property to create.
  Property property = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the property, which will become the final component of
  // the property's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string property_id = 3;
}

// Request message for UpdateProperty.
message UpdatePropertyRequest {
  // The property to update.
  //
  // The `name` field is used to identify the property to update.
  // Format: projects/*/properties/*
  Property property = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// Request message for DeleteProperty.
message DeletePropertyRequest {
  // The name of the property to delete.
  // Format: projects/*/properties/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "registry.googleapis.com/Property"}
  ];
}

// Request message for ListLabels.
message ListLabelsRequest {
  // The parent, which owns this collection of labels.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Label"}
  ];
  // The maximum number of labels to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 values will be returned.
  // The maximum is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListLabels` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListLabels` must match
  // the call that provided the page token.
  string page_token = 3;

  // An expression that can be used to filter the list.
  string filter = 4;
}

// Response message for ListLabels.
message ListLabelsResponse {
  // The labels from the specified publisher.
  repeated Label labels = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request message for GetLabel.
message GetLabelRequest {
  // The name of the label to retrieve.
  // Format: projects/*/labels/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "registry.googleapis.com/Label"
    }
  ];
}

// Request message for CreateLabel.
message CreateLabelRequest {
  // The parent, which owns this collection of labels.
  // Format: projects/*
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "registry.googleapis.com/Label"}
  ];
  // The label to create.
  Label label = 2 [ (google.api.field_behavior) = REQUIRED ];
  // The ID to use for the label, which will become the final component of
  // the label's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string label_id = 3;
}

// Request message for DeleteLabel.
message DeleteLabelRequest {
  // The name of the label to delete.
  // Format: projects/*/labels/*
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "registry.googleapis.com/Label"}
  ];
}
